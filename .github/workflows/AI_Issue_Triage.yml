name: AI Issue Triage Gate 1
on:
  issues:
    types: [opened, edited]

permissions:
  issues: write
  contents: read
  models: read   # Required for GitHub Models

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - name: Use GitHub Models to classify issue
        id: classify
        uses: actions/ai-inference@v1
        with:
          prompt: |
            You are triaging issues for the Djowda platform.
            Classify if the issue is "legit" (clear bug/feature request with enough detail)
            or "not_legit" (spam, incomplete, missing steps).
            
            Issue Title: ${{ github.event.issue.title }}
            Issue Body: ${{ github.event.issue.body }}
            
            Respond with exactly one word: legit or not_legit
          system-prompt: You are a helpful assistant that helps triage GitHub issues. Be thorough but concise in your analysis.
          model: openai/gpt-4o-mini
          temperature: 0.1

      - name: Comment for legit issue
        if: contains(steps.classify.outputs.response, 'legit') && !contains(steps.classify.outputs.response, 'not_legit')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "👋 Thank you for your contribution to the Djowda platform! 🎉 Your issue has been marked as **valid**. The team will take a look soon."
            })

      - name: Add label as triaged
        if: contains(steps.classify.outputs.response, 'legit') && !contains(steps.classify.outputs.response, 'not_legit')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['triaged']
            })
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'needs-info'
            }).catch(() => {})

      - name: Comment for not legit issue
        if: contains(steps.classify.outputs.response, 'not_legit')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "⚠️ Thanks for opening an issue! It looks like some important details may be missing.\n\nPlease update it with:\n- Steps to reproduce\n- Expected behavior\n- Component (User App, Store App, Farmer App, etc.)"
            })

      - name: Add label as needs-info
        if: contains(steps.classify.outputs.response, 'not_legit')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['needs-info']
            })
            github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'triaged'
            }).catch(() => {})

      - name: Handle classification errors
        if: ${{ !contains(steps.classify.outputs.response, 'legit') && !contains(steps.classify.outputs.response, 'not_legit') }}
        uses: actions/github-script@v7
        with:
          script: |
            console.log('AI classification failed or returned unexpected result:', '${{ steps.classify.outputs.response }}')
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "🤖 AI triage is temporarily unavailable. A maintainer will review this issue manually."
            })
